# This is a basic workflow that is manually triggered

name: Manual MDA/MDE

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      deployment:
        type: choice
        description: 'select deployment'
        default: 'cluster0'
        required: true
        options:
        - cluster0
      database:
        type: choice
        description: 'select database'
        default: 'sample_airbnb'
        required: true
        options:
        - sample_airbnb
        - sample_analytics
        - sample_geospatial
        - sample_mflix
        - sample_restaurants
        - sample_supplies
        - sample_training
        - sample_weatherdata
      collection:
        type: choice
        description: 'select collection'
        default: 'companies'
        required: true
        options:
        - companies
        - grades
        - inspections
        - posts
        - routes
        - trips
        - zips
      op:
        type: choice
        description: 'select operation'
        default: 'find'
        required: true
        options:
        - find
        - aggregate
        - update
        - delete
        - insert
      filter:
        description: 'enter filter'
        default: '{}'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - name: show command
      run: echo "running ${{ github.event.inputs.database }}.${{ github.event.inputs.collection }}.${{ github.event.inputs.op }}"   
  deploy_prod:
    environment:
      name: 'prod'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run script file
      run: mongosh "mongodb+srv://${{ github.event.inputs.deployment }}.xzkla.mongodb.net/${{ github.event.inputs.database }}" --username testUser --password testUser --eval 'var collection="${{ github.event.inputs.collection }}"; var op="${{ github.event.inputs.op }}"; var filter="${{ github.event.inputs.filter }}";' --file ./client/dynammicClient.js
      shell: bash
